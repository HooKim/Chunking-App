{"ast":null,"code":"var _jsxFileName = \"/Users/hoo/Desktop/WebProject/react/chunk-app/src/components/Practice.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Practice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getValuesFromInput = this.getValuesFromInput.bind(this);\n  }\n\n  getValuesFromInput() {\n    const sentence = document.getElementById('sentence').value.trim();\n    const size = parseInt(document.getElementById('size').value.trim());\n    this.props.setValues(sentence, size);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Sentence to Chunk : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"sentence\",\n        value: this.props.state.text,\n        readOnly: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }, this), \"Size of Chunk : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"size\",\n        value: this.props.state.size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/practice/on-going\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getValuesFromInput,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hoo/Desktop/WebProject/react/chunk-app/src/components/Practice.js"],"names":["React","Link","Practice","Component","constructor","props","getValuesFromInput","bind","sentence","document","getElementById","value","trim","size","parseInt","setValues","render","state","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AACDD,EAAAA,kBAAkB,GAAE;AAChB,UAAME,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,IAA1C,EAAjB;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,IAAtC,EAAD,CAArB;AAEA,SAAKP,KAAL,CAAWU,SAAX,CAAqBP,QAArB,EAA+BK,IAA/B;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,sDACwB;AAAO,QAAA,IAAI,EAAG,MAAd;AACQ,QAAA,EAAE,EAAG,UADb;AAEQ,QAAA,KAAK,EAAI,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,IAFlC;AAGQ,QAAA,QAAQ,EAAI;AAHpB;AAAA;AAAA;AAAA;AAAA,cADxB,mCAMoB;AAAO,QAAA,IAAI,EAAG,MAAd;AACQ,QAAA,EAAE,EAAG,MADb;AAEQ,QAAA,KAAK,EAAI,KAAKb,KAAL,CAAWY,KAAX,CAAiBJ;AAFlC;AAAA;AAAA;AAAA;AAAA,cANpB,eAUI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,oBAAX;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAG,KAAKP,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAaI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAX;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AA/BiD","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Practice extends React.Component {\n    constructor(props){\n        super(props);\n        this.getValuesFromInput = this.getValuesFromInput.bind(this);\n    }\n    getValuesFromInput(){\n        const sentence = document.getElementById('sentence').value.trim();\n        const size = parseInt(document.getElementById('size').value.trim());\n    \n        this.props.setValues(sentence, size);\n    }\n    render() {\n        return (\n            <div>\n                Sentence to Chunk : <input type = \"text\" \n                                            id = \"sentence\" \n                                            value = {this.props.state.text}\n                                            readOnly = {false}\n                                            ></input> \n                Size of Chunk : <input type = \"text\"\n                                        id = \"size\"\n                                        value = {this.props.state.size}\n                                        ></input>\n                <Link to = \"/practice/on-going\">\n                    <button onClick ={this.getValuesFromInput}>OK</button>\n                </Link>\n                <Link to = \"/\">\n                    <button>Cancel</button>\n                </Link>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}